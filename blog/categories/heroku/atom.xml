<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: heroku | zephiransasのチラシの裏]]></title>
  <link href="http://zephiransas.github.io/blog/categories/heroku/atom.xml" rel="self"/>
  <link href="http://zephiransas.github.io/"/>
  <updated>2017-09-08T14:32:42+09:00</updated>
  <id>http://zephiransas.github.io/</id>
  <author>
    <name><![CDATA[Takafumi Yoshida (@zephiransas)]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[CrystalをHerokuで動かしてみた]]></title>
    <link href="http://zephiransas.github.io/blog/2015/11/10/crystal-on-heroku/"/>
    <updated>2015-11-10T12:28:48+09:00</updated>
    <id>http://zephiransas.github.io/blog/2015/11/10/crystal-on-heroku</id>
    <content type="html"><![CDATA[<p>最近ちょっと話題のcrystal。これをHerokuで動かしてみました。</p>

<h2>Herokuの準備</h2>

<p>まずはHerokuにアプリケーションを作成します。</p>

<p>Herokuでは当然crystalをサポートしていませんので、crystalのコンパイラを自前でインストールする必要があります。
Herokuにはこういったことを実現するために、buildpackという仕組みが用意されています。</p>

<p>crystal用のbuildpackは既にあるので、今回はこれを利用します。</p>

<ul>
<li>zamith/heroku-buildpack-crystal - <a href="https://github.com/zamith/heroku-buildpack-crystal">https://github.com/zamith/heroku-buildpack-crystal</a></li>
</ul>


<p>heroku createする際に上記のbuildpackを指定しておきます。</p>

<pre><code class="bash">heroku create --buildpack https://github.com/zamith/heroku-buildpack-crystal
</code></pre>

<p>ちなみに、これはあとから指定することも可能です。</p>

<pre><code class="bash">heroku
</code></pre>

<h2>アプリケーションの準備</h2>

<p>次にcrystalで簡単なWebサーバを実装します。といっても<a href="http://crystal-lang.org/">crystalの公式ページ</a>にあるサンプルに手を加えた簡単なものです。</p>

<p>app.crというファイル名で以下のファイルを準備します。</p>

<pre><code class="ruby app.cr">require "http/server"
require "option_parser"

server_port = 8080
OptionParser.parse! do |opts|
  opts.on("-p PORT", "--port PORT", "define port to run server") do |port|
    server_port = port.to_i
  end
end

server = HTTP::Server.new("0.0.0.0", server_port) do |request|
  HTTP::Response.ok "text/plain", "Hello world, got #{request.path}!"
end

puts "Listening on http://0.0.0.0:#{server_port}"
server.listen
</code></pre>

<p>注意するところは2点。</p>

<p>1点目は、option_parserを使って起動時のオプションでWebサーバのポート番号を指定できるようにしています。デフォルトでは8080ポートで起動します。</p>

<p>Herokuの場合、サーバのポートは$PORTの値を使用しなければいけませんので、起動時にその値を渡せるようにするためです。</p>

<p>2点目は、以下のようにServerのインスタンス生成時に"0.0.0.0"を指定することです。</p>

<pre><code class="ruby">server = HTTP::Server.new("0.0.0.0", server_port) do |request|
</code></pre>

<p>こうすることで、localhost以外からでもアクセス可能にしてあります。これを指定していない場合は、Herokuでの起動時に</p>

<pre><code class="bash">Error R10 (Boot timeout) -&gt; Web process failed to bind to $PORT within 60 seconds of launch
</code></pre>

<p>というエラーが発生します。</p>

<p>できたら早速、起動してみましょう。</p>

<pre><code class="bash">crystal run app.cr
</code></pre>

<p>ブラウザからlocalhost:8080にアクセスし、以下の用に表示されれば、Webサーバが正しく起動しています。</p>

<p><img src="/images/20151110/screen.png" alt="screen" /></p>

<h2>その他のファイルの準備</h2>

<p>次にProcfileを以下のように準備します。</p>

<pre><code class="bash Procfile">web: ./app -p $PORT
</code></pre>

<p>起動時に$PORTをWebサーバのポートとして、指定しています。</p>

<p>次にProjectfileを準備します。中身は空でOKです。</p>

<pre><code class="bash">touch Projectfile
</code></pre>

<p>これは本来は不要なファイルなのですが、crystalのbuildpack内でProjectfileがない場合は、crystalのアプリケーションとして認識してくれないため、空のファイルを作成しています。</p>

<h2>Herokuへデプロイ</h2>

<p>app.cr、Procfile、Projectfileの3つが準備できたら、Herokuにデプロイしてみましょう。</p>

<pre><code class="bash">git init
git add .
git commit -m 'First commit'
heroku git:remote --app [APPNAME]
git push heroku master
</code></pre>

<p>あとは、Herokuにアクセスして、正しく動作していればOKです。</p>

<h2>まとめ</h2>

<p>今回作成したコードはこちらにおいてありますので、参考にしてください。</p>

<p><a href="https://github.com/zephiransas/crystal-heroku">https://github.com/zephiransas/crystal-heroku</a></p>
]]></content>
  </entry>
  
</feed>
