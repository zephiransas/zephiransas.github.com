<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: javascript | zephiransasのチラシの裏]]></title>
  <link href="http://zephiransas.github.io/blog/categories/javascript/atom.xml" rel="self"/>
  <link href="http://zephiransas.github.io/"/>
  <updated>2015-12-09T17:51:59+09:00</updated>
  <id>http://zephiransas.github.io/</id>
  <author>
    <name><![CDATA[Takafumi Yoshida (@zephiransas)]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Pusherを使ったChrome拡張を作る]]></title>
    <link href="http://zephiransas.github.io/blog/2014/03/20/pusher-with-chrome-extension/"/>
    <updated>2014-03-20T17:24:00+09:00</updated>
    <id>http://zephiransas.github.io/blog/2014/03/20/pusher-with-chrome-extension</id>
    <content type="html"><![CDATA[<p>メッセージ等の新着通知やアップデート情報の配信など、アプリケーションへの通知の方法として、スマートフォンなどで使われるpush通知など、最近では様々なものがあります。</p>

<p>しかし自前で通知用のサーバを運用するのは手間がかかるので、これを簡単に使えるようにするサービスも増えてきました。例えば<a href="http://pusher.com">Pusher.com</a>などがあります。これを使うことで、ブラウザへのリアルタイムな通知機能を、WebSocketを使って簡単に作成することができます。</p>

<p><img src="/images/20140321/pusher-ss.png" alt="pusher-ss" /></p>

<p>今回はPusherからの通知をChrome拡張で受信し、これをデスクトップ通知するサンプルを作成しましたので、解説してみます。</p>

<h2>Pusher側の設定</h2>

<p>まずはPusher側に設定を行います。Pusherでアカウントを作成後、以下のようにアプリケーションを登録します。</p>

<p><img src="/images/20140321/pusher1.png" alt="pusher1" /></p>

<p>ここでEncryptionにチェックを入れておきましょう。チェックしなくても特に問題はないのですが、Chrome拡張の場合セキュリティの問題からSSLを使用したほうが、いろいろ都合がいいので、チェックするほうが無難です。</p>

<h2>Chrome拡張の作成</h2>

<h3>manifest.jsonの設定</h3>

<p>``` json manifest.json
{</p>

<pre><code>"manifest_version": 2,
"name": "Pusher test extension",
"version": "0.0.1",
"description": "Pusher用 Chrome extension",
"permissions" : [
    "notifications"
],
"content_security_policy": "script-src 'self' https://stats.pusher.com; object-src 'self'",
"background" : {
    "scripts": [
        "src/javascript/pusher.min.js",
        "src/javascript/background.js"
    ]
}
</code></pre>

<p>}
```</p>

<p>今回はPusherからのメッセージをデスクトップ通知するようにしたいのでpermissionに
``` json
&ldquo;permissions&rdquo; : [</p>

<pre><code>"notifications"
</code></pre>

<p>],
```
を指定しています。</p>

<p>また、content_security_policyのscript-srcに <strong><a href="https://stats.pusher.com**">https://stats.pusher.com**</a> を追加しています。httpではなく</strong>https**を指定していることに注意してください。</p>

<p><code>json
"content_security_policy": "script-src 'self' https://stats.pusher.com; object-src 'self'",
</code></p>

<p>このサイトは、Pusherのクライアントライブラリであるpusher.min.jsからアクセスしているのですが、これを許可していないとChrome拡張からPusherのサーバへ、正しく接続をすることができません。</p>

<p>次にpusher.min.jsですが、これは本来であればPusherのサイトに公開されているものを読み込んで使いたいところなのですが、Chrome拡張では外部のjavascriptを読み込むことができないようです。なので、ダウンロードしてソースに加えています。
ちなみにpusher.min.jsのホスト先は、<a href="http://pusher.com/docs/client_libraries">こちらで</a>公開されています。</p>

<h3>background.js</h3>

<p>あとはChrome拡張のバックグラウンドで実行されるbackground.jsで、Pusherとの接続を行います。</p>

<p>``` javascript background.js
var pusher = new Pusher(&ldquo;======== KEY ========&rdquo;, { encrypted: true });
var channel = pusher.subscribe(&lsquo;test_channel&rsquo;);
channel.bind(&lsquo;my_event&rsquo;, function(data) {
  var opt = {</p>

<pre><code>type: 'basic',
title: data.title,
message: data.message,
iconUrl: ""
</code></pre>

<p>  }
  chrome.notifications.create(&ldquo;&rdquo;, opt, function(id){ /<em>* Do Nothing </em>/ });<br/>
});
```</p>

<p>Pusherのコンストラクタに渡すkeyには、Pusherで作成したアプリケーションのKeyを指定します。</p>

<p><img src="/images/20140321/pusher2.png" alt="pusher2" /></p>

<p>また、大事なポイントとしてPusherのオプションに</p>

<p><code>
{ encrypted: true }
</code></p>

<p>を指定する必要があります。これは先のmanifest.jsonの設定でも触れましたが、この指定がない場合Pusherの接続先が **<a href="http://stats.pusher.com**">http://stats.pusher.com**</a> となってしまいます。Chrome拡張ではhttpsでない外部サーバに接続することはセキュリティ上できませんので、上記のオプションを指定しています。</p>

<h2>Chrome拡張の読み込み</h2>

<p>では、このようにして作ったChrome拡張を、Chromeに読み込ませて動作確認してみましょう。</p>

<p>ChromeのURL欄に chrome://extensions/ と入力します。まだデベロッパーモードを有効にしていない場合は「デベロッパーモード」をチェックします。次に「パッケージ化されていない拡張機能を読み込む」をクリックします。</p>

<p><img src="/images/20140321/pusher3.png" alt="pusher3" /></p>

<p>そして先ほど作ったChrome拡張を含むディレクトリを指定します。すると、拡張機能の一覧に表示されます。</p>

<p><img src="/images/20140321/pusher4.png" alt="pusher4" /></p>

<p>これでChrome拡張を導入することができました。</p>

<h2>Pusherからテストを行う</h2>

<p>それでは実際にPusherから通知を行い、Chrome拡張に通知が表示されるかどうか確認してみましょう。</p>

<p>Railsなどを使って自分でサーバアプリを作ってもいいのですが、今回はPusherのEvent Creatorの機能を使ってみましょう。</p>

<p>Pusherの管理画面から「Event creator」を選択し、以下のように入力します。</p>

<p><img src="/images/20140321/pusher5.png" alt="pusher5" /></p>

<p>これで、Send eventボタンをおして、うまくいけば画面に以下の様な通知が表示されます。</p>

<p><img src="/images/20140321/pusher6.png" alt="pusher6" /></p>

<p>今回はアイコン画像のURLを指定しなかったので、なにも表示されていませんが、以下の用に画像へのURLを指定することでアイコンを表示することもできます。</p>

<p><code>javascript background.js
var opt = {
  type: 'basic',
  title: data.title,
  message: data.message,
  iconUrl: "http://example.com/path/to/icon"
}
</code></p>

<h2>ソースなど</h2>

<p>今回作成したChrome拡張は、こちらのGithubにまとめてあります。参考にしてみてください。</p>

<ul>
<li><a href="https://github.com/zephiransas/pusher-extension">pusher-extension</a></li>
</ul>

]]></content>
  </entry>
  
</feed>
